AWSTemplateFormatVersion: 2010-09-09

Description: ''

Parameters: 
  MyIPAddress:
    Description: Allow inbound traffic to the Jump Box from this CIDR range.
    Type: String
    Default: '0.0.0.0/0'  
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  vpcID:
    Description: VPC ID of an existing VPC
    Type: AWS::EC2::VPC::Id
  PrivateSubnetID:
    Description: PRIVATE Subnet ID of an existing Private subnet for the Data Gateway and Redshift Cluster
    Type: AWS::EC2::Subnet::Id
  PublicSubnetID:
    Description: PUBLIC Subnet ID of an existing Public Subnet for the Jump Box Server
    Type: AWS::EC2::Subnet::Id
  WindowsServerImageID:
    Description: ID of Windows Serever AMI that will be used for the Jumpbox and Data Gateway EC2 instances
    Type: String
    Default: 'ami-07839aef094c2abb2'
  JumpBoxInstanceType:
    Description: EC2 instance type for jump box.
    Type: String
    Default: t2.medium
  DataGatewayInstanceType:
    Description: EC2 instance type for data gateway.
    Type: String
    Default: t2.medium
  EC2KeyPair:
    Description: Key pair used to connect to EC2 instances
    Type: String
  RedshiftDatabaseName:
    Description: The name of the first database to be created when the cluster is
      created
    Type: String
    Default: dev
    AllowedPattern: "([a-z]|[0-9])+"
  RedshiftClusterType:
    Description: The type of cluster
    Type: String
    Default: multi-node
    AllowedValues:
    - single-node
    - multi-node
  RedshiftNumberOfNodes:
    Description: The number of compute nodes in the cluster. For multi-node clusters,
      the NumberOfNodes parameter must be greater than 1
    Type: Number
    Default: '2'
  RedshiftNodeType:
    Description: The type of node to be provisioned.  Only allowing nodes that can be accessed with Query Editor
    Type: String
    Default: dc2.large
    AllowedValues:
    - ds2.xlarge
    - ds2.8xlarge
    - dc2.large
    - dc2.8xlarge

  RedshiftMasterUsername:
    Description: The user name that is associated with the master user account for the cluster that is being created
    Type: String
    Default: awsuser
    AllowedPattern: "([a-z])([a-z]|[0-9])*"
  RedshiftMasterUserPassword:
    Description: The password that is associated with the master user account for the cluster that is being created.
    Type: String
    NoEcho: 'true'
    MinLength: 8
    MaxLength: 64
    AllowedPattern: "^[a-zA-Z0-9]*$"
  RedshiftPortNumber:
    Description: The port number on which the cluster accepts incoming connections.
    Type: Number
    Default: '5439'

Conditions:
  IsMultiNodeCluster:
    Fn::Equals:
    - !Ref RedshiftClusterType
    - multi-node

Resources:
  ProgrammaticUser:
    Type: AWS::IAM::User

  ProgrammaticUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref ProgrammaticUser
  
  EC2AccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole

  RedshiftAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - redshift.amazonaws.com
            Action:
              - sts:AssumeRole
  
  AccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AccessPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -  
            Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
              - s3:AbortMultipartUpload
              - s3:CreateBucket
              - s3:PutObject
            Resource: arn:aws:s3:::*
      Roles:
        - !Ref RedshiftAccessRole  
        - !Ref EC2AccessRole
      Users:
        - !Ref ProgrammaticUser

  DMZSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: DMZSecurityGroup
      GroupDescription: Allow RDP to Jump Box from my IP
      VpcId: !Ref vpcID
      SecurityGroupEgress: 
      - IpProtocol: '-1'
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
      - IpProtocol: tcp
        FromPort: 3389
        ToPort: 3389
        CidrIp: !Ref MyIPAddress
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref MyIPAddress

  DataGatewaySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DependsOn: DMZSecurityGroup
    Properties:
      GroupName: DataGatewaySecurityGroup
      GroupDescription: Allow RDP to Data Gateway from Jump Box
      VpcId: !Ref vpcID
      SecurityGroupEgress: 
      - IpProtocol: '-1'
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
      - IpProtocol: tcp
        FromPort: 3389
        ToPort: 3389
        SourceSecurityGroupId: !Ref DMZSecurityGroup

  RedshiftSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: RedshiftSecurityGroup
      GroupDescription: Security group for Redshift
      VpcId: !Ref vpcID
      SecurityGroupEgress: 
      - IpProtocol: '-1'
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress: 
      - IpProtocol: tcp
        FromPort: 5439
        ToPort: 5439
        CidrIp: 172.16.0.0/24
      - IpProtocol: tcp
        FromPort: 5439
        ToPort: 5439
        CidrIp: 172.16.1.0/24
      - IpProtocol: tcp
        FromPort: 5439
        ToPort: 5439
        CidrIp: 172.16.2.0/24
      - IpProtocol: tcp
        FromPort: 5439
        ToPort: 5439
        CidrIp: 172.16.3.0/24

  EC2InstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles: 
        - !Ref EC2AccessRole

  JumpBoxInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref WindowsServerImageID
      InstanceType: !Ref JumpBoxInstanceType
      KeyName: !Ref EC2KeyPair
      SubnetId: !Ref PublicSubnetID
      SecurityGroupIds:
        - !Ref DMZSecurityGroup
      Tags:
        - Key: Name
          Value: Jump Box

  JumpBoxEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref JumpBoxInstance

  DataGatewayInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref WindowsServerImageID
      InstanceType: !Ref DataGatewayInstanceType
      KeyName: !Ref EC2KeyPair
      SubnetId: !Ref PrivateSubnetID
      SecurityGroupIds:
        - !Ref DataGatewaySecurityGroup
      Tags:
        - Key: Name
          Value: Data Gateway

  RedshiftSubnetGroup:
    Type: 'AWS::Redshift::ClusterSubnetGroup'
    Properties:
      Description: Redshift in private subnets
      SubnetIds:
        - !Ref PrivateSubnetID

  RedshiftCluster:
    Type: 'AWS::Redshift::Cluster'
    Properties:
      PubliclyAccessible: False
      ClusterType: !Ref RedshiftClusterType
      NumberOfNodes:
        Fn::If:
        - IsMultiNodeCluster
        - !Ref RedshiftNumberOfNodes
        - !Ref AWS::NoValue
      NodeType: !Ref RedshiftNodeType
      DBName: !Ref RedshiftDatabaseName
      MasterUsername: !Ref RedshiftMasterUsername
      MasterUserPassword: !Ref RedshiftMasterUserPassword
      Port: !Ref RedshiftPortNumber
      ClusterSubnetGroupName: !Ref RedshiftSubnetGroup
      IamRoles: 
        - !GetAtt RedshiftAccessRole.Arn
      VpcSecurityGroupIds:
        - !Ref RedshiftSecurityGroup

Outputs:
  IAMProgrammaticUserAccessKeyID:
    Description: Access Key ID for programmatic access user
    Value: !Ref ProgrammaticUserAccessKey
  IAMProgrammaticUserAccessKeySecret:
    Description: Access key secret for programmatic access user 
    Value: !GetAtt ProgrammaticUserAccessKey.SecretAccessKey

  JumpBoxPublicIP: 
    Description: Public IP address for jump box
    Value: !GetAtt JumpBoxInstance.PublicIp

  RedshiftAccessRoleName:
    Description: Name of IAM Role used by Reshift cluster
    Value: !GetAtt RedshiftAccessRole.Arn
  RedshiftClusterName:
    Description: Name of Redshift cluster
    Value: !Ref RedshiftCluster
  RedshiftClusterEndpoint:
    Description: Redshift cluster endpoint
    Value: !Sub "${RedshiftCluster.Endpoint.Address}:${RedshiftCluster.Endpoint.Port}"
  